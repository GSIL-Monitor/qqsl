<?xml version="1.0" encoding="UTF-8"?>

<web-app>

	<display-name>青清水利云web程序</display-name>

	<!-- contextConfigLocation是spring核心配置文件，是spring中必不可少的东西， 这个参数是web和spirng的配置文件相结合的一个关键配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext-*.xml
		</param-value>
	</context-param>

	<!-- 配置上下文载入器， 上下文载入器载入除了DispatcherServlet载入的配置文件之外的其它上下文配置文件， 最常用的上下文载入器是一个Servlet监听器，其名称是ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- springMvc的前端控制器，接受的HTTP请求和转发请求的类，包含了springMvc的请求逻辑， spring使用这个类拦截web请求并进行相应的逻辑处理，当DispatcherServlet载入后， 
		它将从一个xml文件中载入Spirng的应用上下文，该xml文件的名字取决于<servlet-name>， 这里的DispatcherServlet将试图从一个叫做<servlet-name>-servlet.xml的文件中载入应用上下文， 
		其默认位于WEB-INF目录下 -->
	<servlet>
		<servlet-name>qqsl</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>qqsl</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
    <!-- shiro security filter -->
	
	<!-- spring 使用DelegatingFilterProxy代理shiroFilter -->
	<filter>
	<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		 <init-param>
		    <param-name>targetBeanName</param-name>
		    <param-value>shiroFilter</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>

	<filter>
		<filter-name>CORS</filter-name>
		<filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
		<init-param>
			<param-name>cors.allowOrigin</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportedMethods</param-name>
			<param-value>GET, POST, HEAD, PUT, DELETE</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportedHeaders</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposedHeaders</param-name>
			<param-value>Set-Cookie</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportsCredentials</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CORS</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
    </session-config>	

</web-app>
